import streamlit as st
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

st.title("Anatomie krabicov√©ho grafu")

st.write("""
Krabicov√Ω graf (box plot) je statistick√Ω n√°stroj, kter√Ω n√°m poskytuje p≈ôehled o distribuci dat. 
Zobrazuje pƒõt d≈Øle≈æit√Ωch statistick√Ωch hodnot: minimum, prvn√≠ kvartil (Q1), medi√°n, 
t≈ôet√≠ kvartil (Q3) a maximum.
""")

# Vytvo≈ôen√≠ uk√°zkov√Ωch dat
np.random.seed(42)
data = np.random.normal(100, 15, 200)
df = pd.DataFrame({'hodnoty': data})

# Z√°kladn√≠ statistiky
q1 = np.percentile(data, 25)
median = np.percentile(data, 50)
q3 = np.percentile(data, 75)
iqr = q3 - q1
whisker_min = max(np.min(data), q1 - 1.5 * iqr)
whisker_max = min(np.max(data), q3 + 1.5 * iqr)
outliers = data[(data < whisker_min) | (data > whisker_max)]

# Vytvo≈ôen√≠ interaktivn√≠ho grafu
st.header("Interaktivn√≠ prohl√≠≈æen√≠ ƒç√°st√≠ grafu")

# Zobrazen√≠/skryt√≠ r≈Øzn√Ωch ƒç√°st√≠ grafu
show_parts = st.multiselect(
    "Vyberte ƒç√°sti grafu pro zobrazen√≠:",
    ["Krabice (Box)", "Vousy (Whiskers)", "Odlehl√© hodnoty", "Statistiky"],
    default=["Krabice (Box)", "Vousy (Whiskers)", "Odlehl√© hodnoty", "Statistiky"]
)

fig, ax = plt.subplots(figsize=(10, 6))

if "Krabice (Box)" in show_parts:
    sns.boxplot(data=df, y='hodnoty', width=0.3)
else:
    plt.axhline(y=median, color='red', linestyle='-', label='Medi√°n')

if "Statistiky" in show_parts:
    plt.axhline(y=q1, color='green', linestyle='--', label='Q1')
    plt.axhline(y=q3, color='blue', linestyle='--', label='Q3')
    plt.axhline(y=median, color='red', linestyle='-', label='Medi√°n')

if "Odlehl√© hodnoty" in show_parts:
    plt.scatter(np.zeros_like(outliers), outliers, color='red', alpha=0.5, label='Odlehl√© hodnoty')

plt.title("Krabicov√Ω graf s vysvƒõtlen√≠m")
plt.legend()
st.pyplot(fig)

# Vysvƒõtlen√≠ jednotliv√Ωch ƒç√°st√≠
st.header("Vysvƒõtlen√≠ ƒç√°st√≠ krabicov√©ho grafu")

col1, col2 = st.columns(2)

with col1:
    st.subheader("üì¶ Krabice (Box)")
    st.write("""
    - **Horn√≠ hrana**: T≈ôet√≠ kvartil (Q3, 75. percentil)
    - **St≈ôedn√≠ ƒç√°ra**: Medi√°n (Q2, 50. percentil)
    - **Doln√≠ hrana**: Prvn√≠ kvartil (Q1, 25. percentil)
    - **IQR (Mezikvartilov√© rozpƒõt√≠)**: Rozd√≠l mezi Q3 a Q1
    """)

    st.subheader("„ÄΩÔ∏è Vousy (Whiskers)")
    st.write("""
    - **Horn√≠ vous**: Sah√° k nejvy≈°≈°√≠ hodnotƒõ do 1.5 √ó IQR nad Q3
    - **Doln√≠ vous**: Sah√° k nejni≈æ≈°√≠ hodnotƒõ do 1.5 √ó IQR pod Q1
    """)

with col2:
    st.subheader("‚≠ï Odlehl√© hodnoty")
    st.write("""
    - Body le≈æ√≠c√≠ za vousy
    - Hodnoty vzd√°len√© v√≠ce ne≈æ 1.5 √ó IQR od Q1 nebo Q3
    - ƒåasto indikuj√≠ anom√°lie nebo chyby v datech
    """)

    st.subheader("üìä Statistick√© hodnoty")
    st.write(f"""
    Pro na≈°e data:
    - Minimum: {data.min():.2f}
    - Q1: {q1:.2f}
    - Medi√°n: {median:.2f}
    - Q3: {q3:.2f}
    - Maximum: {data.max():.2f}
    """)

# Interaktivn√≠ demonstrace
st.header("Interaktivn√≠ demonstrace")

# Gener√°tor dat s r≈Øzn√Ωmi rozdƒõlen√≠mi
dist_type = st.selectbox(
    "Vyberte typ rozdƒõlen√≠ dat:",
    ["Norm√°ln√≠", "Rovnomƒõrn√©", "Exponenci√°ln√≠", "Bimod√°ln√≠"]
)

sample_size = st.slider("Velikost vzorku:", 50, 1000, 200)

if dist_type == "Norm√°ln√≠":
    data = np.random.normal(100, 15, sample_size)
elif dist_type == "Rovnomƒõrn√©":
    data = np.random.uniform(50, 150, sample_size)
elif dist_type == "Exponenci√°ln√≠":
    data = np.random.exponential(50, sample_size)
else:  # Bimod√°ln√≠
    data = np.concatenate([
        np.random.normal(70, 10, sample_size//2),
        np.random.normal(130, 10, sample_size//2)
    ])

fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 5))

# Krabicov√Ω graf
sns.boxplot(data=data, ax=ax1)
ax1.set_title("Krabicov√Ω graf")

# Histogram pro srovn√°n√≠
sns.histplot(data=data, ax=ax2)
ax2.set_title("Histogram stejn√Ωch dat")

st.pyplot(fig)

st.success("""
‚ú® **V√Ωhody krabicov√©ho grafu:**
1. Rychl√Ω p≈ôehled o distribuci dat
2. Snadn√° identifikace odlehl√Ωch hodnot
3. Mo≈ænost porovn√°n√≠ v√≠ce skupin dat
4. Zobrazen√≠ kl√≠ƒçov√Ωch statistick√Ωch hodnot
5. √ösporn√° vizualizace velk√Ωch datov√Ωch soubor≈Ø
""")

st.info("""
üí° **Kdy pou≈æ√≠t krabicov√Ω graf:**
- Pro zobrazen√≠ distribuce numerick√Ωch dat
- Pro identifikaci odlehl√Ωch hodnot
- Pro porovn√°n√≠ rozdƒõlen√≠ mezi skupinami
- Pro vizualizaci symetrie/asymetrie dat
- Pro detekci zmƒõn v datech v ƒçase
""")