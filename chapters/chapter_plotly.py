import streamlit as st
import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
import numpy as np

st.title("Interaktivn√≠ vizualizace s Plotly")

st.header("Co je Plotly?")
st.write("""
Plotly je knihovna pro tvorbu interaktivn√≠ch vizualizac√≠ v Pythonu. Nab√≠z√≠:
- Interaktivn√≠ grafy s mo≈ænost√≠ p≈ôibl√≠≈æen√≠ a odd√°len√≠
- Mo≈ænost exportu do r≈Øzn√Ωch form√°t≈Ø
- Bohatou sadu typ≈Ø graf≈Ø
- Modern√≠ vzhled a animace
""")

# Naƒçten√≠ uk√°zkov√Ωch dat
df_tips = px.data.tips()
df_iris = px.data.iris()
df_stocks = px.data.stocks()

st.header("1. Z√°kladn√≠ grafy")
st.write("Nejƒçastƒõji pou≈æ√≠van√© typy graf≈Ø:")

col1, col2 = st.columns(2)

with col1:
    st.subheader("ƒå√°rov√Ω graf")
    fig = px.line(df_stocks, x='date', y=['GOOG', 'AAPL', 'AMZN'],
                  title='V√Ωvoj cen akci√≠')
    st.plotly_chart(fig)

    st.code("""
    import plotly.express as px
    
    fig = px.line(df_stocks, x='date', y=['GOOG', 'AAPL', 'AMZN'], 
                  title='V√Ωvoj cen akci√≠')
    fig.show()
    """)

with col2:
    st.subheader("Sloupcov√Ω graf")
    fig = px.bar(df_tips.groupby('day')['total_bill'].mean().reset_index(),
                 x='day', y='total_bill',
                 title='Pr≈Ømƒõrn√° √∫trata podle dne')
    st.plotly_chart(fig)

    st.code("""
    fig = px.bar(df_tips.groupby('day')['total_bill'].mean().reset_index(), 
                 x='day', y='total_bill', 
                 title='Pr≈Ømƒõrn√° √∫trata podle dne')
    """)

st.header("2. Statistick√© grafy")
st.write("Grafy pro anal√Ωzu distribuce dat:")

col1, col2 = st.columns(2)

with col1:
    st.subheader("Krabicov√Ω graf")
    fig = px.box(df_tips, x='day', y='total_bill', color='time',
                 title='Distribuce √∫trat podle dne a ƒçasu')
    st.plotly_chart(fig)

    st.code("""
    fig = px.box(df_tips, x='day', y='total_bill', color='time',
                 title='Distribuce √∫trat podle dne a ƒçasu')
    """)

with col2:
    st.subheader("Histogram")
    fig = px.histogram(df_tips, x='total_bill', color='sex',
                       title='Distribuce √∫trat podle pohlav√≠')
    st.plotly_chart(fig)

    st.code("""
    fig = px.histogram(df_tips, x='total_bill', color='sex',
                      title='Distribuce √∫trat podle pohlav√≠')
    """)

st.header("3. Vztahov√© grafy")
st.write("Grafy pro zobrazen√≠ vztah≈Ø mezi promƒõnn√Ωmi:")

col1, col2 = st.columns(2)

with col1:
    st.subheader("Bodov√Ω graf")
    fig = px.scatter(df_iris, x='sepal_length', y='sepal_width',
                     color='species', title='Iris dataset')
    st.plotly_chart(fig)

    st.code("""
    fig = px.scatter(df_iris, x='sepal_length', y='sepal_width', 
                    color='species', title='Iris dataset')
    """)

with col2:
    st.subheader("Bublinkov√Ω graf")
    fig = px.scatter(df_tips, x='total_bill', y='tip',
                     size='size', color='time',
                     title='Vztah mezi √∫tratou a spropitn√Ωm')
    st.plotly_chart(fig)

    st.code("""
    fig = px.scatter(df_tips, x='total_bill', y='tip', 
                    size='size', color='time',
                    title='Vztah mezi √∫tratou a spropitn√Ωm')
    """)

st.header("4. Slo≈æen√© grafy")
st.write("Komplexnƒõj≈°√≠ vizualizace:")

# Subploty
st.subheader("Subploty")
from plotly.subplots import make_subplots

fig = make_subplots(rows=1, cols=2,
                    subplot_titles=('√ötrata podle dne', 'Spropitn√© podle dne'))

fig.add_trace(
    go.Box(x=df_tips['day'], y=df_tips['total_bill'], name='√ötrata'),
    row=1, col=1
)

fig.add_trace(
    go.Box(x=df_tips['day'], y=df_tips['tip'], name='Spropitn√©'),
    row=1, col=2
)

fig.update_layout(title_text="Srovn√°n√≠ √∫trat a spropitn√©ho", height=500)
st.plotly_chart(fig)

st.code("""
from plotly.subplots import make_subplots

fig = make_subplots(rows=1, cols=2,
                    subplot_titles=('√ötrata podle dne', 'Spropitn√© podle dne'))

fig.add_trace(
    go.Box(x=df_tips['day'], y=df_tips['total_bill'], name='√ötrata'),
    row=1, col=1
)

fig.add_trace(
    go.Box(x=df_tips['day'], y=df_tips['tip'], name='Spropitn√©'),
    row=1, col=2
)

fig.update_layout(title_text="Srovn√°n√≠ √∫trat a spropitn√©ho")
""")

st.header("5. Interaktivn√≠ prvky")
st.write("Uk√°zka interaktivn√≠ch mo≈ænost√≠ Plotly:")

# Dropdown menu
st.subheader("Graf s v√Ωbƒõrem promƒõnn√©")
selected_var = st.selectbox(
    'Vyberte promƒõnnou pro zobrazen√≠:',
    ['total_bill', 'tip', 'size']
)

fig = px.box(df_tips, x='day', y=selected_var, color='time',
             title=f'Distribuce {selected_var} podle dne')
st.plotly_chart(fig)

st.code("""
selected_var = 'total_bill'  # nebo jin√° promƒõnn√°
fig = px.box(df_tips, x='day', y=selected_var, color='time',
             title=f'Distribuce {selected_var} podle dne')
""")

st.success("""
‚ú® **V√Ωhody Plotly:**
1. **Interaktivita** - zoom, pan, tooltips
2. **Modern√≠ vzhled** - atraktivn√≠ v√Ωchoz√≠ styly
3. **Flexibilita** - mnoho mo≈ænost√≠ p≈ôizp≈Øsoben√≠
4. **Export** - mo≈ænost ulo≈æen√≠ do r≈Øzn√Ωch form√°t≈Ø
5. **Integrace** - snadn√© pou≈æit√≠ v Jupyter notebooks a webov√Ωch aplikac√≠ch
""")

st.info("""
üí° **Tipy pro pr√°ci s Plotly:**
1. Pou≈æ√≠vejte `px` pro jednoduch√© grafy
2. Vyu≈æ√≠vejte `go` pro vƒõt≈°√≠ kontrolu
3. Experimentujte s interaktivn√≠mi prvky
4. P≈ôizp≈Øsobujte vzhled pomoc√≠ `update_layout`
5. Kombinujte r≈Øzn√© typy graf≈Ø pomoc√≠ subplot≈Ø
""")

st.title("Komplexn√≠ uk√°zka fig.update_layout v Plotly")

# Generov√°n√≠ uk√°zkov√Ωch dat
np.random.seed(42)
dates = pd.date_range(start='2023-01-01', end='2023-12-31', freq='D')
data = {
    'datum': dates,
    'hodnota_A': np.random.normal(100, 15, len(dates)),
    'hodnota_B': np.random.normal(150, 20, len(dates)),
    'kategorie': np.random.choice(['X', 'Y', 'Z'], len(dates))
}
df = pd.DataFrame(data)

fig = go.Figure()

# P≈ôid√°n√≠ dat
fig.add_trace(go.Scatter(x=df['datum'], y=df['hodnota_A'], name='≈òada A'))
fig.add_trace(go.Scatter(x=df['datum'], y=df['hodnota_B'], name='≈òada B'))

# Komplexn√≠ update_layout
fig.update_layout(
    # Z√°kladn√≠ nastaven√≠
    title={
        'text': 'Komplexn√≠ graf s r≈Øzn√Ωmi nastaven√≠mi',
        'y': 0.95,
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top',
        'font': dict(size=24, color='darkblue', family='Arial')
    },

    # Rozmƒõry grafu
    width=800,
    height=500,

    # Pozad√≠
    plot_bgcolor='rgba(240, 240, 240, 0.95)',
    paper_bgcolor='white',

    # Okraje
    margin=dict(l=80, r=80, t=100, b=80),

    # Nastaven√≠ os
    xaxis=dict(
        title='ƒåasov√° osa',
        showgrid=True,
        gridwidth=1,
        gridcolor='white',
        showline=True,
        linewidth=2,
        linecolor='black',
        mirror=True
    ),

    yaxis=dict(
        title='Hodnoty',
        showgrid=True,
        gridwidth=1,
        gridcolor='white',
        showline=True,
        linewidth=2,
        linecolor='black',
        mirror=True
    ),

    # Legenda
    showlegend=True,
    legend=dict(
        yanchor="top",
        y=0.99,
        xanchor="left",
        x=0.01,
        bgcolor='rgba(0, 0, 0, 0.8)',
        bordercolor='black',
        borderwidth=1
    ),

    # Anotace
    annotations=[
        dict(
            x='2023-07-01',
            y=150,
            xref='x',
            yref='y',
            text='D≈Øle≈æit√Ω bod',
            showarrow=True,
            arrowhead=2,
            ax=0,
            ay=-40
        )
    ],

    # Vod√≠c√≠ ƒç√°ry
    shapes=[
        # Horizont√°ln√≠ ƒç√°ra
        dict(
            type='line',
            x0='2023-01-01',
            x1='2023-12-31',
            y0=100,
            y1=100,
            line=dict(
                color='red',
                width=2,
                dash='dash'
            )
        )
    ]
)

st.plotly_chart(fig)

st.code("""
fig.update_layout(
    # Z√°kladn√≠ nastaven√≠
    title={
        'text': 'Komplexn√≠ graf s r≈Øzn√Ωmi nastaven√≠mi',
        'y':0.95,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top',
        'font': dict(size=24, color='darkblue', family='Arial')
    },

    # Rozmƒõry grafu
    width=800,
    height=500,

    # Pozad√≠
    plot_bgcolor='rgba(240, 240, 240, 0.95)',
    paper_bgcolor='white',

    # Okraje
    margin=dict(l=80, r=80, t=100, b=80),

    # Nastaven√≠ os
    xaxis=dict(
        title='ƒåasov√° osa',
        showgrid=True,
        gridwidth=1,
        gridcolor='white',
        showline=True,
        linewidth=2,
        linecolor='black',
        mirror=True
    ),

    # Legenda
    showlegend=True,
    legend=dict(
        yanchor="top",
        y=0.99,
        xanchor="left",
        x=0.01,
        bgcolor='rgba(0, 0, 0, 0.8)',
        bordercolor='black',
        borderwidth=1
    )
)
""")
