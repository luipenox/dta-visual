import streamlit as st
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

st.title("Z√°kladn√≠ p≈ô√≠klady Seaborn graf≈Ø")

# Inicializace stavov√Ωch promƒõnn√Ωch
if 'show_hints' not in st.session_state:
    st.session_state.show_hints = [False] * 3
if 'show_solutions' not in st.session_state:
    st.session_state.show_solutions = [False] * 3

def toggle_hint(index):
    st.session_state.show_hints[index] = not st.session_state.show_hints[index]

def toggle_solution(index):
    st.session_state.show_solutions[index] = not st.session_state.show_solutions[index]

# P≈ô√≠klad 1
st.header("1. ƒå√°rov√Ω graf v√Ωvoje cen")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte ƒç√°rov√Ω graf zobrazuj√≠c√≠ v√Ωvoj cen t≈ô√≠ produkt≈Ø v pr≈Øbƒõhu roku. 
P≈ôidejte legendu a m≈ô√≠≈æku pro lep≈°√≠ ƒçitelnost.
""")

st.code("""
# Vzorov√° data
import pandas as pd
import numpy as np

# Generov√°n√≠ dat
np.random.seed(42)
dates = pd.date_range(start='2023-01-01', end='2023-12-31', freq='M')
data = {
    'datum': dates,
    'produkt_A': np.random.normal(100, 10, len(dates)),
    'produkt_B': np.random.normal(150, 15, len(dates)),
    'produkt_C': np.random.normal(80, 8, len(dates))
}
df = pd.DataFrame(data)
""", language="python")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint1"):
        toggle_hint(0)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution1"):
        toggle_solution(0)

if st.session_state.show_hints[0]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte `sns.lineplot()`
    - Pro v√≠ce ≈ôad pou≈æijte parametr `data` a v√≠ce sloupc≈Ø
    - Nastavte styly pomoc√≠ `sns.set_style()`
    - P≈ôidejte popisky os a titulek
    """)

if st.session_state.show_solutions[0]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import seaborn as sns
    import matplotlib.pyplot as plt
    
    # Nastaven√≠ stylu
    sns.set_style("whitegrid")
    
    # Vytvo≈ôen√≠ grafu
    plt.figure(figsize=(12, 6))
    
    # Vykreslen√≠ ƒçar pro ka≈æd√Ω produkt
    sns.lineplot(data=df, x='datum', y='produkt_A', label='Produkt A')
    sns.lineplot(data=df, x='datum', y='produkt_B', label='Produkt B')
    sns.lineplot(data=df, x='datum', y='produkt_C', label='Produkt C')
    
    # Nastaven√≠ grafu
    plt.title('V√Ωvoj cen produkt≈Ø v roce 2023')
    plt.xlabel('Datum')
    plt.ylabel('Cena (Kƒç)')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()
    """, language="python")

# P≈ô√≠klad 2
st.header("2. Krabicov√Ω graf distribuce dat")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte krabicov√Ω graf zobrazuj√≠c√≠ distribuci hodnot pro r≈Øzn√© kategorie. 
P≈ôidejte barevn√© rozli≈°en√≠ a popisky.
""")

st.code("""
# Naƒçten√≠ uk√°zkov√Ωch dat
tips = sns.load_dataset("tips")
""", language="python")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint2"):
        toggle_hint(1)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution2"):
        toggle_solution(1)

if st.session_state.show_hints[1]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte `sns.boxplot()`
    - Nastavte parametr `hue` pro dal≈°√≠ rozli≈°en√≠
    - P≈ôidejte popisky os
    - Upravte orientaci popisk≈Ø pro lep≈°√≠ ƒçitelnost
    """)

if st.session_state.show_solutions[1]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import seaborn as sns
    import matplotlib.pyplot as plt
    
    # Nastaven√≠ stylu
    sns.set_style("whitegrid")
    plt.figure(figsize=(12, 6))
    
    # Vytvo≈ôen√≠ krabicov√©ho grafu
    sns.boxplot(data=tips, x="day", y="total_bill", hue="time",
                palette="Set3")
    
    # Nastaven√≠ grafu
    plt.title('Rozdƒõlen√≠ √∫ƒçt≈Ø podle dne a ƒçasu')
    plt.xlabel('Den v t√Ωdnu')
    plt.ylabel('Celkov√° ƒç√°stka √∫ƒçtu ($)')
    plt.xticks(rotation=0)
    plt.tight_layout()
    plt.show()
    """, language="python")

# P≈ô√≠klad 3
st.header("3. Bodov√Ω graf se statistikou")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte bodov√Ω graf s regresn√≠ p≈ô√≠mkou zobrazuj√≠c√≠ vztah mezi dvƒõma promƒõnn√Ωmi.
P≈ôidejte barevn√© rozli≈°en√≠ podle kategorie a statistickou legendu.
""")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint3"):
        toggle_hint(2)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution3"):
        toggle_solution(2)

if st.session_state.show_hints[2]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte `sns.scatterplot()` pro body
    - P≈ôidejte regresn√≠ p≈ô√≠mku pomoc√≠ `sns.regplot()`
    - Vyu≈æijte parametr `hue` pro kategorizaci
    - P≈ôidejte statistick√© informace do titulku
    """)

if st.session_state.show_solutions[2]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import seaborn as sns
    import matplotlib.pyplot as plt
    from scipy import stats
    
    # Nastaven√≠ stylu
    sns.set_style("whitegrid")
    plt.figure(figsize=(10, 6))
    
    # Vytvo≈ôen√≠ bodov√©ho grafu
    sns.scatterplot(data=tips, x="total_bill", y="tip", 
                    hue="sex", alpha=0.6)
    
    # P≈ôid√°n√≠ regresn√≠ p≈ô√≠mky
    sns.regplot(data=tips, x="total_bill", y="tip", 
                scatter=False, color="red", line_kws={"linestyle": "--"})
    
    # V√Ωpoƒçet korelace
    correlation = tips['total_bill'].corr(tips['tip'])
    
    # Nastaven√≠ grafu
    plt.title(f'Vztah mezi √∫ƒçtem a spropitn√Ωm (korelace: {correlation:.2f})')
    plt.xlabel('Celkov√° ƒç√°stka √∫ƒçtu ($)')
    plt.ylabel('Spropitn√© ($)')
    plt.tight_layout()
    plt.show()
    """, language="python")
