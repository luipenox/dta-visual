import streamlit as st

st.title("5 P≈ô√≠klad≈Ø vizualizace pomoc√≠ Pandas")

# Inicializace stavov√Ωch promƒõnn√Ωch v session_state
if 'show_hints' not in st.session_state:
    st.session_state.show_hints = [False] * 5
if 'show_solutions' not in st.session_state:
    st.session_state.show_solutions = [False] * 5

def toggle_hint(index):
    st.session_state.show_hints[index] = not st.session_state.show_hints[index]

def toggle_solution(index):
    st.session_state.show_solutions[index] = not st.session_state.show_solutions[index]

# P≈ô√≠klad 1
st.header("1. ƒåasov√° ≈ôada prodej≈Ø")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte ƒç√°rov√Ω graf zobrazuj√≠c√≠ v√Ωvoj mƒõs√≠ƒçn√≠ch prodej≈Ø za rok 2023. 
Data obsahuj√≠ sloupce 'mƒõs√≠c' a 'prodeje'.
""")

st.code("""
# Vzorov√° data
import pandas as pd

data = {
    'mƒõs√≠c': ['Led', '√öno', 'B≈ôe', 'Dub', 'Kvƒõ', 'ƒåvn', 
              'ƒåvc', 'Srp', 'Z√°≈ô', '≈ò√≠j', 'Lis', 'Pro'],
    'prodeje': [120, 135, 142, 158, 165, 172, 
                168, 175, 182, 188, 195, 210]
}
df = pd.DataFrame(data)
""", language="python")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint1"):
        toggle_hint(0)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution1"):
        toggle_solution(0)

if st.session_state.show_hints[0]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte metodu `plot()`
    - Nastavte parametry `x` a `y`
    - P≈ôidejte titulek a popisky os
    """)

if st.session_state.show_solutions[0]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import matplotlib.pyplot as plt
    
    df.plot(x='mƒõs√≠c', y='prodeje', 
            title='Mƒõs√≠ƒçn√≠ prodeje 2023',
            figsize=(10, 6),
            marker='o')
    plt.grid(True)
    plt.xlabel('Mƒõs√≠c')
    plt.ylabel('Prodeje (tis. Kƒç)')
    plt.show()
    """, language="python")

# P≈ô√≠klad 2
st.header("2. Porovn√°n√≠ kategori√≠ produkt≈Ø")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte sloupcov√Ω graf zobrazuj√≠c√≠ celkov√© prodeje podle kategori√≠ produkt≈Ø.
""")

st.code("""
# Vzorov√° data
data = {
    'kategorie': ['Elektronika', 'Obleƒçen√≠', 'Potraviny', 
                  'N√°bytek', 'Sport'],
    'prodeje': [850, 620, 930, 450, 380]
}
df = pd.DataFrame(data)
""", language="python")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint2"):
        toggle_hint(1)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution2"):
        toggle_solution(1)

if st.session_state.show_hints[1]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte metodu `plot.bar()`
    - P≈ôidejte barevn√© rozli≈°en√≠
    - Zobrazte hodnoty nad sloupci
    """)

if st.session_state.show_solutions[1]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import matplotlib.pyplot as plt
    
    ax = df.plot.bar(x='kategorie', y='prodeje',
                     title='Prodeje podle kategori√≠',
                     figsize=(10, 6),
                     color='skyblue')
    plt.grid(axis='y')
    for i, v in enumerate(df['prodeje']):
        ax.text(i, v, str(v), ha='center', va='bottom')
    plt.show()
    """, language="python")

# P≈ô√≠klad 3
st.header("3. Rozlo≈æen√≠ cen produkt≈Ø")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte histogram a krabicov√Ω graf pro anal√Ωzu rozlo≈æen√≠ cen produkt≈Ø.
""")

st.code("""
# Vzorov√° data
import numpy as np
np.random.seed(42)
data = {
    'cena': np.random.normal(1000, 200, 500)
}
df = pd.DataFrame(data)
""", language="python")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint3"):
        toggle_hint(2)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution3"):
        toggle_solution(2)

if st.session_state.show_hints[2]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte metody `hist()` a `boxplot()`
    - Nastavte vhodn√Ω poƒçet bin≈Ø pro histogram
    - P≈ôidejte statistick√© √∫daje
    """)

if st.session_state.show_solutions[2]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import matplotlib.pyplot as plt
    
    # Histogram
    plt.figure(figsize=(12, 5))
    plt.subplot(1, 2, 1)
    df['cena'].hist(bins=30, color='lightgreen')
    plt.title('Histogram cen')
    plt.xlabel('Cena')
    plt.ylabel('ƒåetnost')

    # Krabicov√Ω graf
    plt.subplot(1, 2, 2)
    df.boxplot(column='cena')
    plt.title('Krabicov√Ω graf cen')
    plt.show()
    """, language="python")

# P≈ô√≠klad 4
st.header("4. Korelace mezi veliƒçinami")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte bodov√Ω graf zn√°zor≈àuj√≠c√≠ vztah mezi cenou produktu a poƒçtem prodan√Ωch kus≈Ø.
""")

st.code("""
# Vzorov√° data
np.random.seed(42)
data = {
    'cena': np.random.uniform(100, 1000, 50),
    'prodan√©_kusy': np.random.uniform(10, 100, 50)
}
df = pd.DataFrame(data)
""", language="python")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint4"):
        toggle_hint(3)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution4"):
        toggle_solution(3)

if st.session_state.show_hints[3]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte metodu `plot.scatter()`
    - P≈ôidejte trend pomoc√≠ regresn√≠ p≈ô√≠mky
    - Upravte velikost a barvu bod≈Ø
    """)

if st.session_state.show_solutions[3]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import matplotlib.pyplot as plt
    from scipy import stats

    plt.figure(figsize=(10, 6))
    df.plot.scatter(x='cena', y='prodan√©_kusy',
                    alpha=0.5, color='purple')

    # P≈ôid√°n√≠ regresn√≠ p≈ô√≠mky
    slope, intercept, r_value, p_value, std_err = stats.linregress(df['cena'], 
                                                                  df['prodan√©_kusy'])
    line = slope * df['cena'] + intercept
    plt.plot(df['cena'], line, color='red', linestyle='--')

    plt.title(f'Vztah mezi cenou a prodan√Ωmi kusy (R¬≤ = {r_value**2:.3f})')
    plt.xlabel('Cena produktu')
    plt.ylabel('Prodan√© kusy')
    plt.show()
    """, language="python")

# P≈ô√≠klad 5
st.header("5. Slo≈æen√≠ portfolia")
st.subheader("Zad√°n√≠")
st.write("""
Vytvo≈ôte kol√°ƒçov√Ω graf zobrazuj√≠c√≠ rozlo≈æen√≠ investiƒçn√≠ho portfolia.
""")

st.code("""
# Vzorov√° data
data = {
    'kategorie': ['Akcie', 'Dluhopisy', 'Nemovitosti', 
                  'Komodity', 'Hotovost'],
    'pod√≠l': [40, 25, 20, 10, 5]
}
df = pd.DataFrame(data)
""", language="python")

col1, col2 = st.columns(2)
with col1:
    if st.button("Zobrazit/skr√Ωt n√°povƒõdu", key="hint5"):
        toggle_hint(4)
with col2:
    if st.button("Zobrazit/skr√Ωt ≈ôe≈°en√≠", key="solution5"):
        toggle_solution(4)

if st.session_state.show_hints[4]:
    st.info("""
    üí° **N√°povƒõda:**
    - Pou≈æijte metodu `plot.pie()`
    - P≈ôidejte procenta do popisk≈Ø
    - Zv√Ωraznƒõte nejvƒõt≈°√≠ segment
    """)

if st.session_state.show_solutions[4]:
    st.subheader("≈òe≈°en√≠")
    st.code("""
    import matplotlib.pyplot as plt
    
    explode = [0.1 if x == df['pod√≠l'].max() else 0 for x in df['pod√≠l']]

    df.plot.pie(y='pod√≠l', labels=df['kategorie'],
                autopct='%1.1f%%',
                explode=explode,
                title='Slo≈æen√≠ investiƒçn√≠ho portfolia',
                figsize=(10, 8))
    plt.ylabel('')  # Odstranƒõn√≠ popisku osy y
    plt.show()
    """, language="python")

st.success("""
‚ú® **Tipy pro v≈°echny grafy:**
- V≈ædy pou≈æ√≠vejte jasn√© a v√Ωsti≈æn√© popisky
- P≈ôizp≈Øsobte velikost grafu podle pot≈ôeby
- Vyu≈æ√≠vejte vhodn√© barevn√© sch√©ma
- P≈ôid√°vejte m≈ô√≠≈æku tam, kde je to u≈æiteƒçn√©
- Nezapome≈àte na legendu u slo≈æitƒõj≈°√≠ch graf≈Ø
""")